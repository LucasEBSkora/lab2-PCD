@startuml
'https://plantuml.com/class-diagram

Main --|> Application
class Main {
    + Main()
    + Stage getPrimaryStage()
    + void start(Stage primaryStage)
    + {static} void main(String[] args)
    + Scene makeStartScreen()
    + Scene makeCreateScreen()
    + Scene makeGlobalScreen()
    + Scene pop()
    + push(Scene s)
    + show()
    + showWarning(String message)
}
Main "1" --> "0..*" Scene
Main o--> Stage

package model {
    class Carnet {
        - String Name
        - String author
        - ObservableList<String> participants
        - LocalDate start
        - LocalDate end
        - Path filePath
        + String getName()
        + setName(String name)
        + String getAuthor()
        + setAuthor(String author)
        + LocalDate getStart()
        + setStart(LocalDate start)
        + LocalDate getEnd()
        + setEnd(LocalDate end)
        + Path getFilePath()
        + setFilePath(Path filePath)
        + addParticipant(String participant)
        + removeParticipant(String participant)
        + ObservableList<String> getParticipants()
        + String problem()
        + String asJSON()
        + {static} Carnet fromJSON(String json, Path path)
        + {static} Carnet fromPath(Path path)
        + save()
    }
    Carnet "1" o--> "*" CarnetEntry
    
    class CarnetEntry {
        + LocalDate date
        + Path imagePath
        + String title
        + String description
    }

}
view.DatesComponent ..> utils.DDMMYYYYConverter
model.Carnet ..> utils.LocalDateAdapter
package utils {
    class DDMMYYYYConverter {
        - DateTimeFormatter dateFormatter
        + String toString(LocalDate date)
        + LocalDate fromString(String string)
    }
    LocalDateAdapter o--> DDMMYYYYConverter
    class LocalDateAdapter {
                + JsonElement serialize(LocalDate localDate, Type type, JsonSerializationContext jsonSerializationContext)
                + LocalDate deserialize(JsonElement jsonElement, Type type, JsonDeserializationContext jsonDeserializationContext)
    }

}

package view {
    class CarnetDeVoyageView {
    }
    CarnetDeVoyageView --> Main
    CarnetDeVoyageView --> Carnet

    class CreateScreenButtons {
        - saveNotebook()
    }
    CreateScreenButtons --|> CarnetDeVoyageView

    class CreatorAndParticipantsComponent {
        - initialize()
        - addMember()
        - deleteMember()
    }
    CreatorAndParticipantsComponent --|> CarnetDeVoyageView

    class DatesComponent {
        - initialize()
        - updateStartDate()
        - updateEndDate()
    }
    DatesComponent --|> CarnetDeVoyageView

    class TitleAndPathComponent {
        + initialize()
        # choosePathButton()
        - formatPath(String path)
        - boolean setFilePath(String pathStr)
    }
    TitleAndPathComponent --|> CarnetDeVoyageView

    class StartScreen {
        # ChangeToCreateScreen()
        # showPickBook()
    }
    StartScreen --> Main

    class GlobalScreenHeader {
        - initialize()
    }
    GlobalScreenHeader --|> CarnetDeVoyageView

    class GlobalScreenFrames {
        + initialize()
    }
    GlobalScreenFrames --|> CarnetDeVoyageView

    class "Callback<P, R>" as ListViewCallback {
        R call(P param)
    }
    EntryCellFactory ..|> ListViewCallback : "P = ListView<CarnetEntry>, R = ListCell<CarnetEntry>"
    class EntryCellFactory {

        -  String path;
        + EntryCellFactory()
        - {static} void formatImage(ImageView img)
        + ListCell<CarnetEntry> call(ListView<CarnetEntry> param)
       }

   EntryCellFactory *--> DDMMYYYYConverter
   GlobalScreenFrames ..> EntryCellFactory

    class GlobalScreenFooter {
        + initialize()
        + String buildLabelText()
        + openEditScreen()
    }
    GlobalScreenFooter --|> CarnetDeVoyageView
}

@enduml